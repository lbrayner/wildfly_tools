#!/usr/bin/env bash

set -o pipefail

print_usage() {
	printf '\n%s\n' "$(basename "${0}") [PID]"
}

if [[ ${#} -gt 1 ]]
then
    print_usage 1>&2
    exit 1
fi

if ! hash ansifilter
then
    echo "ansifilter required." 1>&2
    exit 1
fi

pid=${1}

[[ -n "${pid}" ]] && set -e

threads="$(mktemp)"
active_threads="$(mktemp)"

while true
do
    if [[ -z ${pid} ]]
    then
        wpid=$(pgrep -f 'java.*server.*jboss.*standalone' | head -n1)
    else
        wpid=${pid}
    fi

    if [[ -z ${wpid} ]]
    then
        echo "Could not find a WildFly instance." 1>&2
        sleep 1
        continue
    fi

    top -n 1 -H -p ${wpid} | ansifilter \
        | sed -n 's/^[ \t]*\(.* java\)[ \t]\+$/\1/p' > "${threads}"

    awk '{if($9 > 0.0) print $0;}' "${threads}" > "${active_threads}"

    pattern=""

    while read tid
    do
        pattern="${pattern}|$(printf '0x%x' ${tid})"
    done < <(cut -d " " -f 1 "${active_threads}")

    [[ -z "${pattern}" ]] && sleep 1 && continue

    pattern="${pattern:1}"
    date="$(date '+[%Y-%m-%d %H:%M:%S]')"

    jstack -l ${wpid} | sed -n -E "s/.*(${pattern}).*/${date} &/p"

    sleep 1
done
